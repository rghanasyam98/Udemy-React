{"ast":null,"code":"import { redirect } from \"react-router-dom\";\nfunction getTokenExpiry() {\n  const expiration = localStorage.getItem('expiration');\n}\nconst getToken = () => {\n  const token = localStorage.getItem('token');\n  return token;\n};\nexport default getToken;\nexport function getTokenLoader() {\n  return getToken();\n}\n\n// if we try to access route that graphically not possible but when types on search bar\n// in that case if it need to be protected then check for token ,if no token then redirect\nexport function checkingForTokenLoader() {\n  const token = getToken();\n  if (!token) {\n    return redirect(\"/auth\");\n  }\n}","map":{"version":3,"names":["redirect","getTokenExpiry","expiration","localStorage","getItem","getToken","token","getTokenLoader","checkingForTokenLoader"],"sources":["D:/Online course projects/udemy react/authentication_project/frontend/src/utils/authToken.js"],"sourcesContent":[" import { redirect } from \"react-router-dom\";\r\n \r\n  function getTokenExpiry(){\r\n     const expiration=localStorage.getItem('expiration');\r\n }\r\n \r\n const getToken=()=>{\r\n    const token=localStorage.getItem('token');\r\n    return token;\r\n\r\n}\r\n\r\nexport default getToken;\r\n\r\nexport function getTokenLoader(){\r\n    return getToken();\r\n}\r\n\r\n// if we try to access route that graphically not possible but when types on search bar\r\n// in that case if it need to be protected then check for token ,if no token then redirect\r\nexport function checkingForTokenLoader(){\r\n    const token = getToken();\r\n    if(!token){\r\n        return redirect(\"/auth\");\r\n    }\r\n}"],"mappings":"AAAC,SAASA,QAAQ,QAAQ,kBAAkB;AAE1C,SAASC,cAAcA,CAAA,EAAE;EACtB,MAAMC,UAAU,GAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;AACvD;AAEA,MAAMC,QAAQ,GAACA,CAAA,KAAI;EAChB,MAAMC,KAAK,GAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzC,OAAOE,KAAK;AAEhB,CAAC;AAED,eAAeD,QAAQ;AAEvB,OAAO,SAASE,cAAcA,CAAA,EAAE;EAC5B,OAAOF,QAAQ,CAAC,CAAC;AACrB;;AAEA;AACA;AACA,OAAO,SAASG,sBAAsBA,CAAA,EAAE;EACpC,MAAMF,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,IAAG,CAACC,KAAK,EAAC;IACN,OAAON,QAAQ,CAAC,OAAO,CAAC;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}