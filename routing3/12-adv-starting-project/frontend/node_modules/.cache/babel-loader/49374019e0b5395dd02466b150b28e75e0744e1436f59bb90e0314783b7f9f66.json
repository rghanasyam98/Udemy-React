{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online course projects\\\\udemy react\\\\routing3\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, useActionData, json, redirect } from \"react-router-dom\";\nimport classes from \"./EventForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const response = useActionData();\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: response && response.errors && Object.values(response.errors).map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? \"submitting...\" : \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"flbdLoQtNfwhSG4WtGk4cunAmVo=\", false, function () {\n  return [useNavigate, useNavigation, useActionData];\n});\n_c = EventForm;\nexport default EventForm;\n\n// defining an action fn to be performed on form submit for new event or edit event that is reusing the same form\nexport async function action({\n  request,\n  params\n}) {\n  // entered data in form will be available in request since we used <Form> instead of <form>\n  const data = await request.formData();\n  // extracting individual fields from with name property\n  const eventadata = {\n    title: data.get(\"title\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n    image: data.get(\"image\")\n  };\n  console.log(eventadata);\n  console.log();\n  let url = \"http://localhost:8080/events\";\n  let method = \"POST\";\n  if (request.method === \"patch\") {\n    url = \"http://localhost:8080/events/\" + params.eventId;\n    method = \"PATCH\";\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventadata)\n  });\n\n  // backend validates the code and report errors\n  // in the case we need to indicate what are errors in the screen\n  // response contains list of errors\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    // if failed to submit data then throw an error to render error page\n    throw json({\n      status: 500,\n      message: \"unable to submit event\"\n    });\n  } else {\n    // useNavigate hook cant be used inside action\n    // so another method redirect is used\n    return redirect(\"/events\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","useActionData","json","redirect","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","navigate","navigation","response","isSubmitting","state","cancelHandler","className","form","children","errors","Object","values","map","error","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","request","params","data","formData","eventadata","get","console","log","url","eventId","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["D:/Online course projects/udemy react/routing3/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import {\n  Form,\n  useNavigate,\n  useNavigation,\n  useActionData,\n  json,\n  redirect\n} from \"react-router-dom\";\n\nimport classes from \"./EventForm.module.css\";\n\nfunction EventForm({ method, event }) {\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const response = useActionData();\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  return (\n    <Form method={method} className={classes.form}>\n      <p>\n        <ul>\n          {response &&\n            response.errors &&\n            Object.values(response.errors).map((error) => (\n              <li key={error}>{error}</li>\n            ))}\n        </ul>\n\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          required\n          defaultValue={event ? event.title : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          name=\"image\"\n          required\n          defaultValue={event ? event.image : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          required\n          defaultValue={event ? event.date : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"5\"\n          required\n          defaultValue={event ? event.description : \"\"}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>\n          {isSubmitting ? \"submitting...\" : \"save\"}\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\n// defining an action fn to be performed on form submit for new event or edit event that is reusing the same form\nexport async function action({ request, params }) {\n  // entered data in form will be available in request since we used <Form> instead of <form>\n  const data = await request.formData();\n  // extracting individual fields from with name property\n  const eventadata = {\n    title: data.get(\"title\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n    image: data.get(\"image\"),\n  };\n  console.log(eventadata);\n  console.log()\n\n  let url = \"http://localhost:8080/events\";\n  let method = \"POST\";\n  if (request.method === \"patch\") {\n    url = \"http://localhost:8080/events/\" + params.eventId;\n    method = \"PATCH\";\n  }\n\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventadata),\n  });\n\n  // backend validates the code and report errors\n  // in the case we need to indicate what are errors in the screen\n  // response contains list of errors\n  if (response.status === 422) {\n    return response;\n  }\n\n  if (!response.ok) {\n    // if failed to submit data then throw an error to render error page\n    throw json({\n      status: 500,\n      message: \"unable to submit event\",\n    });\n  } else {\n    // useNavigate hook cant be used inside action\n    // so another method redirect is used\n    return redirect(\"/events\");\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}