{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online course projects\\\\udemy react\\\\routing3\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, useActionData } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const response = useActionData();\n  const isSubmitting = navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('..');\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: response && response.errors && Object.values(response.errors).map(error => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? 'submitting...' : 'save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"flbdLoQtNfwhSG4WtGk4cunAmVo=\", false, function () {\n  return [useNavigate, useNavigation, useActionData];\n});\n_c = EventForm;\nexport default EventForm;\n\n// defining an action fn to be performed on form submit\nexport async function action({\n  request,\n  params\n}) {\n  // entered data in form will be available in request since we used <Form> instead of <form>\n  const data = await request.formData();\n  // extracting individual fields from with name property\n  const eventadata = {\n    title: data.get('title'),\n    date: data.get('date'),\n    description: data.get('description'),\n    image: data.get('image')\n  };\n  console.log(eventadata);\n  let url = 'http://localhost:8080/events';\n  let method = 'POST';\n  if (request.method === 'patch') {\n    url = 'http://localhost:8080/events/' + params.eventId;\n    method = 'PA';\n  }\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventadata)\n  });\n\n  // backend validates the code and report errors\n  // in the case we need to indicate what are errors in the screen\n  // response contains list of errors\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    // if failed to submit data then throw an error to render error page\n    throw json({\n      status: 500,\n      message: 'unable to submit event'\n    });\n  } else {\n    // useNavigate hook cant be used inside action\n    // so another method redirect is used\n    return redirect('/events');\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","useActionData","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","navigate","navigation","response","isSubmitting","state","cancelHandler","className","form","children","errors","Object","values","map","error","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","request","params","data","formData","eventadata","get","console","log","url","eventId","fetch","headers","body","JSON","stringify","status","ok","json","message","redirect","$RefreshReg$"],"sources":["D:/Online course projects/udemy react/routing3/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { Form, useNavigate,useNavigation,useActionData } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const navigate = useNavigate();\n  const navigation=useNavigation();\n  const response=useActionData();\n  const isSubmitting=navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    <Form method={method} className={classes.form}>\n      <p>\n      <ul>\n        {response && response.errors && \n        \n          Object.values(response.errors).map((error)=>\n            <li key={error}>{error}</li>\n          )\n       }\n       </ul>\n\n\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          required\n          defaultValue={event ? event.title : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          name=\"image\"\n          required\n          defaultValue={event ? event.image : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          required\n          defaultValue={event ? event.date : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"5\"\n          required\n          defaultValue={event ? event.description : \"\"}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler}  disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting} >{isSubmitting ? 'submitting...': 'save'}</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\n\n\n// defining an action fn to be performed on form submit\nexport async function action({request,params}){\n  // entered data in form will be available in request since we used <Form> instead of <form>\n  const data=await request.formData();\n  // extracting individual fields from with name property\n  const eventadata={\n      title:data.get('title'),\n      date:data.get('date'),\n      description:data.get('description'),\n      image:data.get('image')\n  };\n  console.log(eventadata);\n\n  let url='http://localhost:8080/events';\n  let method='POST';\n  if(request.method === 'patch'){\n   url='http://localhost:8080/events/'+ params.eventId;\n   method ='PA'\n  }\n\n  const response=await fetch('http://localhost:8080/events',{\n      method: 'POST',\n      headers:{\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(eventadata)\n  });\n\n\n  // backend validates the code and report errors\n  // in the case we need to indicate what are errors in the screen\n  // response contains list of errors\n    if(response.status === 422){\n      return response;\n    }\n\n  if(!response.ok){\n      // if failed to submit data then throw an error to render error page\n      throw json({\n          status:500,\n          message:'unable to submit event'\n      })\n  }\n  else{\n      // useNavigate hook cant be used inside action\n      // so another method redirect is used\n     return redirect('/events');\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}