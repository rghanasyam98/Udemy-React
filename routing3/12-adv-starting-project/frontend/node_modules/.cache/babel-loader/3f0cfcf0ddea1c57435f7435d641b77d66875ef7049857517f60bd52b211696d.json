{"ast":null,"code":"var _jsxFileName = \"D:\\\\Online course projects\\\\udemy react\\\\routing3\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\";\nimport { useEffect, useState } from 'react';\nimport EventsList from '../components/EventsList';\nimport { useLoaderData } from 'react-router-dom';\n\n// Utilizing router specific loader and useLoaderData for http\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  const events = useLoaderData;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: fetchedEvents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this);\n}\n_c = EventsPage;\nexport default EventsPage;\n\n// normal method of loading a  component AND fetching hhtp with useEffect \n\n// function EventsPage() {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [fetchedEvents, setFetchedEvents] = useState();\n//   const [error, setError] = useState();\n\n//   useEffect(() => {\n//     async function fetchEvents() {\n//       setIsLoading(true);\n//       const response = await fetch('http://localhost:8080/events');\n\n//       if (!response.ok) {\n//         setError('Fetching events failed.');\n//       } else {\n//         const resData = await response.json();\n//         setFetchedEvents(resData.events);\n//       }\n//       setIsLoading(false);\n//     }\n\n//     fetchEvents();\n//   }, []);\n//   return (\n//     <>\n//       <div style={{ textAlign: 'center' }}>\n//         {isLoading && <p>Loading...</p>}\n//         {error && <p>{error}</p>}\n//       </div>\n//       {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n//     </>\n//   );\n// }\n\n// export default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","EventsList","useLoaderData","jsxDEV","_jsxDEV","EventsPage","events","fetchedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Online course projects/udemy react/routing3/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport EventsList from '../components/EventsList';\r\nimport { useLoaderData } from 'react-router-dom';\r\n\r\n// Utilizing router specific loader and useLoaderData for http\r\nfunction EventsPage() {\r\n \r\n  const events=useLoaderData\r\n  \r\n    return (\r\n  \r\n        \r\n       <EventsList events={fetchedEvents} />\r\n \r\n    );\r\n  }\r\n  \r\n  export default EventsPage;\r\n\r\n\r\n// normal method of loading a  component AND fetching hhtp with useEffect \r\n\r\n// function EventsPage() {\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [fetchedEvents, setFetchedEvents] = useState();\r\n//   const [error, setError] = useState();\r\n\r\n//   useEffect(() => {\r\n//     async function fetchEvents() {\r\n//       setIsLoading(true);\r\n//       const response = await fetch('http://localhost:8080/events');\r\n\r\n//       if (!response.ok) {\r\n//         setError('Fetching events failed.');\r\n//       } else {\r\n//         const resData = await response.json();\r\n//         setFetchedEvents(resData.events);\r\n//       }\r\n//       setIsLoading(false);\r\n//     }\r\n\r\n//     fetchEvents();\r\n//   }, []);\r\n//   return (\r\n//     <>\r\n//       <div style={{ textAlign: 'center' }}>\r\n//         {isLoading && <p>Loading...</p>}\r\n//         {error && <p>{error}</p>}\r\n//       </div>\r\n//       {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default EventsPage;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,UAAUA,CAAA,EAAG;EAEpB,MAAMC,MAAM,GAACJ,aAAa;EAExB,oBAGGE,OAAA,CAACH,UAAU;IAACK,MAAM,EAAEC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAG1C;AAACC,EAAA,GAVMP,UAAU;AAYjB,eAAeA,UAAU;;AAG3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}